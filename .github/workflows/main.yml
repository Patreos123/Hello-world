# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Super-Linter
  uses: github/super-linter@v3.14.0


      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
- name: Cache
  uses: actions/cache@v2.1.6
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
    restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    upload-chunk-size: # optional
    - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v1.8.2
  with:
    # Optional SDK version to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
    dotnet-version: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    # Whether prerelease versions should be matched with non-exact versions (for example 5.0.0-preview.6 being matched by 5, 5.0, 5.x or 5.0.x). Defaults to false if not provided.
    include-prerelease: # optional
    - name: Coveralls GitHub Action
  # You may pin to the exact commit or the version.
  # uses: coverallsapp/github-action@9ba913c152ae4be1327bfb9085dc806cedb44057
  uses: coverallsapp/github-action@1.1.3
  with:
    # 
    github-token: 
    # Path to lcov file
    path-to-lcov: # default is ./coverage/lcov.info
    # Job flag name, e.g. "Unit", "Functional", or "Integration". Will be shown in the Coveralls UI.
    flag-name: # optional
    # Set to true if you are running parallel jobs, then use "parallel_finished: true" for the last action.
    parallel: # optional
    # Set to true for the last action when using "parallel: true".
    parallel-finished: # optional
    # Coveralls Enterprise server (more info: https://enterprise.coveralls.io)
    coveralls-endpoint: # optional, default is https://coveralls.io
    # The root folder of the project that originally ran the tests
    base-path: # optional
    # Override the branch name
    git-branch: # optional
    # Override the commit sha
    git-commit: # optional
    - name: Packer GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: hashicorp/packer-github-actions@2ef5cf325f2beace99a1742903eb52542765c08f
  uses: hashicorp/packer-github-actions@v0.2.0
  with:
    # command to execute
    command: 
    # arguments for command
    arguments: # optional
    # file(s) to target
    target: # default is artifacts.pkr.json
    
    
    
